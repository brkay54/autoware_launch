<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!-- Essential parameters -->
  <arg name="map_path" description="point cloud and lanelet2 map directory path"/>
  <arg name="vehicle_model" description="vehicle model name"/>
  <arg name="sensor_model" description="sensor model name"/>

  <!-- Optional parameters -->
  <!-- Control -->
  <arg name="lateral_controller_mode" default="mpc_follower"/>
  <!-- Map -->
  <arg name="lanelet2_map_file" default="lanelet2_map.osm" description="lanelet2 map file name"/>
  <arg name="pointcloud_map_file" default="pointcloud_map.pcd" description="pointcloud map file name"/>
  <!-- Tools -->
  <arg name="rviz" default="true" description="launch rviz"/>
  <arg name="rviz_config" default="$(find-pkg-share autoware_launch)/rviz/autoware.rviz" description="rviz config"/>
  <!-- Scenario simulation -->
  <arg name="initial_engage_state" default="true" description="/vehicle/engage state after starting Autoware"/>
  <arg name="perception/enable_detection_failure" default="true" description="enable to simulate detection failure when using dummy perception"/>
  <arg name="perception/enable_object_recognition" default="true" description="enable object recognition when using dummy perception"/>
  <arg name="sensing/visible_range" default="300.0" description="visible range when using dummy perception"/>
  <arg name="scenario_simulation" default="false" description="use scenario simulation"/>
  <!-- Vcu emulation -->
  <arg name="vehicle_simulation" default="true" description="use vehicle simulation"/>

  <group>
    <!-- Vehicle -->
    <let name="launch_vehicle_interface" value="false" if="$(var vehicle_simulation)"/>
    <let name="launch_vehicle_interface" value="true" unless="$(var vehicle_simulation)"/>
    <!-- Tools -->
    <let name="launch_web_controller" value="false" if="$(var scenario_simulation)"/>
    <let name="launch_web_controller" value="true" unless="$(var scenario_simulation)"/>

    <include file="$(find-pkg-share autoware_launch)/launch/autoware.launch.xml">
      <!-- Common -->
      <arg name="map_path" value="$(var map_path)"/>
      <arg name="vehicle_model" value="$(var vehicle_model)"/>
      <arg name="sensor_model" value="$(var sensor_model)"/>
      <!-- Modules to be launched -->
      <arg name="launch_sensing" value="false"/>
      <arg name="launch_localization" value="false"/>
      <arg name="launch_perception" value="false"/>
      <!-- Control -->
      <arg name="lateral_controller_mode" value="$(var lateral_controller_mode)"/>
      <!-- Pointcloud container -->
      <arg name="use_pointcloud_container" value="false"/>
      <!-- Vehicle -->
      <arg name="launch_vehicle_interface" value="$(var launch_vehicle_interface)"/>
      <!-- System -->
      <arg name="system_run_mode" value="planning_simulation"/>
      <!-- Map -->
      <arg name="lanelet2_map_file" value="$(var lanelet2_map_file)"/>
      <arg name="pointcloud_map_file" value="$(var pointcloud_map_file)"/>
      <!-- API -->
      <arg name="init_simulator_pose" value="true"/>
      <!-- Tools -->
      <arg name="rviz" value="$(var rviz)"/>
      <arg name="rviz_config" value="$(var rviz_config)"/>
      <arg name="launch_web_controller" value="$(var launch_web_controller)"/>
    </include>
  </group>

  <!-- Initial Pose Relay -->
  <group>
    <node pkg="topic_tools" exec="relay" name="initial_pose_2d">
      <param name="input_topic" value="/initialpose"/>
      <param name="output_topic" value="/initialpose2d"/>
      <param name="type" value="geometry_msgs/msg/PoseWithCovarianceStamped"/>
    </node>
  </group>

  <!-- Simulator -->
  <group>
    <let name="launch_dummy_perception" value="false" if="$(var scenario_simulation)"/>
    <let name="launch_dummy_perception" value="true" unless="$(var scenario_simulation)"/>
    <let name="launch_dummy_vehicle" value="false" if="$(var scenario_simulation)"/>
    <let name="launch_dummy_vehicle" value="true" unless="$(var scenario_simulation)"/>

    <include file="$(find-pkg-share tier4_simulator_launch)/launch/simulator.launch.xml">
      <arg name="launch_dummy_perception" value="$(var launch_dummy_perception)"/>
      <arg name="launch_dummy_vehicle" value="$(var launch_dummy_vehicle)"/>
      <arg name="perception/enable_detection_failure" value="$(var perception/enable_detection_failure)"/>
      <arg name="perception/enable_object_recognition" value="$(var perception/enable_object_recognition)"/>
      <arg name="sensing/visible_range" value="$(var sensing/visible_range)"/>
      <arg name="vehicle_model" value="$(var vehicle_model)"/>
      <arg name="initial_engage_state" value="$(var initial_engage_state)"/>
      <arg name="vehicle_info_param_file" value="$(find-pkg-share $(var vehicle_model)_description)/config/vehicle_info.param.yaml"/>
    </include>
  </group>

  <!-- control performance analysis tool run -->
  <group>
    <include file="$(find-pkg-share control_performance_analysis)/launch/controller_performance_analysis.launch.xml"/>
    <node pkg="plotjuggler" exec="plotjuggler" name="plotjuggler" output="screen" launch-prefix="xterm -e" args="--layout $(find-pkg-share control_performance_analysis)/config/controller_monitor.xml -p" />
  </group>
</launch>
